// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/avatars": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload avatar API",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Upload avatar Example",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.UploadAvatarResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "description": "Get All Campaign data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get All Campaign data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "find by user_id",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/campaign.CampaignFormatter"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Campaign data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Create Campaign data",
                "parameters": [
                    {
                        "description": "Body Required",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/campaign.CreateCampaignInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/campaign.CampaignFormatter"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/campaigns/images": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Campaign Image data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Save Campaign Image data",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "campaign_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Is Primary Image",
                        "name": "is_primary",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/helper.UploadImageResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "description": "Detail Campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Get Campaign Image data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/campaign.CampaignFormatter"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaign"
                ],
                "summary": "Update Campaign data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Campaign Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/campaign.CreateCampaignInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/campaign.CampaignFormatter"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/email_checker": {
            "post": {
                "description": "Check Email Avaiability API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Check Email Avaiability Example",
                "parameters": [
                    {
                        "description": "Body Required",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CheckEmailInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.CheckEmailAvailabilityResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/sessions": {
            "post": {
                "description": "Login API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login Example",
                "parameters": [
                    {
                        "description": "Body Required",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.RegisterUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get User Transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get User Transaction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/transaction.UserTransactionFormatter"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Campaign Transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Campaign Transaction",
                "parameters": [
                    {
                        "description": "Body Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction.CreateTransactionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/transaction.TransactionFormatter"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions/campaign/{campaign_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Campaign Transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Campaign Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign Id",
                        "name": "campaign_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/transaction.CampaignTransactionFormatter"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Register API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register Example",
                "parameters": [
                    {
                        "description": "Body Required",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RegisterUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.RegisterUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Current User API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Current User Example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/handler.GetCurrentUser.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "campaign.CampaignFormatter": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "integer"
                },
                "goal_amount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "campaign.CreateCampaignInput": {
            "type": "object",
            "required": [
                "description",
                "goal_amount",
                "name",
                "perks",
                "short_description"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "goal_amount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "perks": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                }
            }
        },
        "handler.GetCurrentUser.UserResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "helper.UploadImageResponse": {
            "type": "object",
            "properties": {
                "is_uploaded": {
                    "type": "boolean"
                }
            }
        },
        "helper.meta": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "This should be a single int representing an HTTP status code",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "helper.response": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/helper.meta"
                }
            }
        },
        "transaction.CampaignFormatter": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "transaction.CampaignTransactionFormatter": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "transaction.CreateTransactionInput": {
            "type": "object",
            "required": [
                "amount",
                "campaign_id"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "campaign_id": {
                    "type": "integer"
                }
            }
        },
        "transaction.TransactionFormatter": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "transaction.UserTransactionFormatter": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "campaign": {
                    "$ref": "#/definitions/transaction.CampaignFormatter"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "user.CheckEmailAvailabilityResponse": {
            "type": "object",
            "properties": {
                "is_available": {
                    "type": "boolean"
                }
            }
        },
        "user.CheckEmailInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "user.LoginUserInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "testing@developer.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "user.RegisterUserInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "occupation",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "occupation": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.RegisterUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "occupation": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.UploadAvatarResponse": {
            "type": "object",
            "properties": {
                "is_uploaded": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Crowdfunding API",
	Description:      "Crowdfunding API Description",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
